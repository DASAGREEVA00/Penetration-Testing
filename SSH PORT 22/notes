The SSH protocol also stated to as Secure Shell is a technique for secure and reliable remote login from one computer to another. It offers several options for 
strong authentication, as it protects the connections and communications\ security and integrity with strong encryption. It is a secure alternative to the non-protected
login protocols (such as telnet, rlogin) and insecure file transfer methods (such as FTP).

SSH Port Scanning
If you don’t have direct access to the host machine, use nmap to remotely identify the port state that is considered to be the initial step of the penetration test.
So, to identify an open port on a remote network, we will use a version scan of the nmap that will not only identify an open port but will also perform a banner 
grabbing that shows the installed version of the service.

  nmap -sV -p22,2222 IP_ADDRESS 
 
Port Redirection
By default, ssh listen on port 22 which means if the attacker identifies port 22 is open then he can try attacks on port 22 in order to connect with the host machine.
Therefore, a system admin chooses Port redirection or Port mapping by changing its default port to others in order to receive the connection request from the 
authorized network.
Follow the below steps for port redirection:

Step1: Edit the sshd_config from inside the /etc/sshd using the editor 
  nano /etc/sshd/sshd_config
Step2: Change port 22 into 2222 and save the file.
Step3: Then restart ssh

Establish SSH connection using RSA key
Strong passwords don’t seem to be decent to secure the server because a brute force attack can crack them. That’s why you need an additional security method to 
secure the SSH server. SSH key pairs is another necessary feature to authenticate clients to the server. It consists of a long string of characters: a public and a 
private key. You can place the public key on the server and private key on the client machine and unlock the server by connecting the private key of the client machine.
Once the keys match up, the system permits you to automatically establish an SSH session without the need to type in a password.
Ssh-keygen is a tool for creating new authentication key pairs for SSH. Such key pairs are used for automating logins, single sign-on, and for authenticating hosts.

Thus, we will follow the steps for generating a key pair for authenticated connection.
Step1: Run the given command to generate an ssh key pair (id_rsa and id_rsa.pub) on the host machine.
  ssh-keygen
Step2: Same should be done on the client machine which is authorized to establish the connection with the host machine.
Step3: Once the ssh key pair (id_rsa and id_rsa.pub) get generated then rename the id_rsa.pub into authorized_keys as show in the given image.
  cd .ssh
  ls
  cat id_rsa.pub > authorized_keys
Step4: Share the authorized_keys with the host machine by copying it into the .ssh directory.
Step5: Edit the sshd_config from inside the /etc/sshd using the editor.
  nano /etc/sshd/sshd_config
Step6: Enable the “passwordauthentication no” comment

As a result of only the authorized machine which rsa key can establish a connection with the host machine without using password.

Exploit SSH with Metasploit
SSH Key Persistence- Post Exploitation
Consider a situation, that by compromising the host machine you have obtained a meterpreter session and want to leave a permanent backdoor that will provide a 
reverse connection for next time.This can be achieved with the help of the Metasploit module named “SSH Key Persistence-a post exploit” when port 22 is running
on the host machine. This module will add an SSH key to a specified user (or all), to allow remote login on the victim via SSH at any time. 
  use post/linux/manage/sshkey_persistence  
  msf post(sshkey_persistence) > set session 1
  msf post(sshkey_persistence) >exploit
  use post/linux/manage/sshkey_persistence
  msf post(sshkey_persistence) > set session 1
  msf post(sshkey_persistence) >exploit
As can be seen in the image given, it added authorized keys to /home / ignite/.ssh and stored a private key within /root/.msf4/loot.
  chmod 600 key
  ssh -i key user@IPADDRESS
  
Password Cracking:SSH
Hydra
Hydra is a parallelized login cracker which supports numerous protocols to attack. It is a very fast, flexible, and new modules are easy to add in the attacks. 
This tool makes it possible for the researcher and security consultants to show how easy it would be to gain unauthorized access to a system remotely. 
  hydra -L user.txt -P password.txt IP_ADDRESS ssh

Medusa
Medusa is a speedy, parallel, and modular tool which allows login through brute force. Its goal is to support as many services that allow authentication possible. 
The key features of this tool are thread-based testing, Flexible user input, Modular design, and Multiple protocols supported.
  medusa -h IPADDRESS -U user.txt -P password.txt -M ssh

Patator
Patator is a multi-purpose brute-forcer, with a modular design and a flexible usage. Patator was written out of frustration from using Hydra, Medusa, Ncrack, 
Metasploit modules, and Nmap NSE scripts for password guessing attacks. Patator is a multi-threaded tool written in Python, that strives to be more reliable and flexible than his fellow predecessors.It is quite useful for making brute 
force attacks on several ports such as FTP, HTTP, SMB, etc.
  patator ssh_login host=IP_ADDRESS user=FILE0 0=user.txt password=FILE1 1=password.txt

Ncrack
Ncrack is a network authentication tool, which helps the pen-tester to find out how the credentials that are protecting network access are vulnerable. This tool is
a part of the Kali Linux arsenal and comes pre-installed with its package. It also has a unique feature to attack multiple targets at once, which is not seen very 
often in these tools. Run the following command to exploit port 22 via Ncrack.
  ncrack -U user.txt -P password.txt
  
Metasploit
It is a collaboration between the open-source community and Rapid 7. It helps security teams do more than just verify vulnerabilities, manages security assessments,
and improve security awareness.This module will test SSH logins on a range of machines and report successful logins. If we have loaded a database plugin and 
connected to a database this module will record successful logins and host you can access.
But first, open kali terminal and type “msfconsole”.Then follow these commands.
  use auxiliary/scanner/ssh/ssh_login
  set rhosts IPADDRESS
  set user_file user.txt
  set pass_file password.txt
  run
  
